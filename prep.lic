# prep
put 'stance def'
put 'gird'
Script.start('standgroup')

# brooch stuff
if Char.name == 'Idios' || Char.name == 'Aranthius' || Char.name == 'Gossan'
  if percentmind >= 62
    Script.run 'turnbrooch', 'red 2'
    Script.run 'turnbrooch', 'blue 1'
  end
end

# start scripts
if Char.name == 'Gossan'
  Script.start('isigns')
  Spell[211].cast
  Spell[215].cast
  Script.start('Gossan-surge')
  # fix-vocal-cords and shattered_empath start
  # at launch and have hide_me
elsif Char.name == 'Helsfeld'
  Script.start('isigils')
  Script.start('Helsfeld-surge')
elsif Char.name == 'Idios'
  Script.start('symbolz')
  Script.start('Idios-unstun')
elsif Char.name == 'Aranthius'
  Script.start('symbolz')
  Script.start('rapid')
elsif Char.name == 'Azanoth'
  Script.start('symbolz')
  if !Spell[9605].active? && !Spell[9606].active? && checkstamina >= 30
    fput 'cman surge'
  end
  fput 'cman dervish'
  waitrt?
  fput 'war shout'
  waitrt?
  Script.start('Azanoth-506')
end

# wait until I have bounty
loop do
  break if bounty? =~ $AZ_BOUNTY_PATTERN_NUM
  sleep 1
end

# tell remote my bounty count
if bounty? =~ $AZ_BOUNTY_PATTERN_NUM && $1.to_i
  $AZ_REMOTE['bandits'].set_count(Char.name, $1.to_i)
  echo "Set count #{$1}"
else
  throw 'Failed to find bounty count'
end

# wait until everyone else has registered bounty count
loop do
  break if $AZ_REMOTE['bandits'].has_group_registered?
  sleep 1
end

# wait for other characters to get more credit?
original_other_bounty_counts = nil
loop do
  bounty_counts = $AZ_REMOTE['bandits'].get_counts
  # echo bounty_counts

  other_bounty_counts =
    bounty_counts.reject do |k, v|
      k === Char.name || k == 'Gossan' || k == 'Helsfeld'
    end
  if original_other_bounty_counts.nil?
    original_other_bounty_counts = other_bounty_counts
  end

  if Char.name == 'Gossan'
    break if bounty_counts[Char.name] >= other_bounty_counts.values.max - 1
  elsif Char.name == 'Helsfeld'
    if bounty_counts[Char.name] >=
         other_bounty_counts.values.max && other_bounty_counts.all? do |k, v|
         v < original_other_bounty_counts[k]
       end
      break
    end
  else
    if bounty_counts[Char.name] >= (other_bounty_counts.values.max || 0) - 3
      break
    end
  end

  echo 'Waiting for other character to get more credit'
  sleep 0.5
end

# start attack script
Script.start("#{Char.name}-bandits")

# update remote as count is reduced
last_bounty_text = ''
loop do
  bounty_text = bounty?
  if last_bounty_text != bounty_text
    new_count = 100
    if bounty_text =~ $AZ_BOUNTY_PATTERN_FINISHED
      new_count = 0
    elsif bounty_text =~ $AZ_BOUNTY_PATTERN_NUM
      new_count = $1.to_i
    end
    $AZ_REMOTE['bandits'].set_count(Char.name, new_count)
    last_bounty_text = bounty_text
  end
  sleep 0.5
end
