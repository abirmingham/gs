bounty_pattern = /^You have been tasked to (?:help \w+ )?suppress bandit activity (?:in|on|near|between|under) (?:the )?.*\s(?:near|between|under|\.).* (\d+) (?:more )?of them/

def read_lines_bounty_counts(bounty_pattern)
  echo "Waiting on bounty counts"
  while line = get
    if line =~ /(You .*whisper.*Status - .*to your group)|(player .*whispers to the group, "Status -)/
      bounty_counts = {}
      if line =~ /"Status - (.*)"/
        $1.gsub('finished', '0').split(/\. ?/).each { |t|
          tokens = t.split(' ')
          bounty_counts[tokens[0]] = tokens[1].to_i
        }
        return bounty_counts
      else
        echo "ERROR: Failed to find counts: #{line}"
        return nil
      end
    end
  end
end

# prep
put 'stance def'
put 'gird'
Script.start('standgroup')

# brooch stuff
if Char.name == 'Idios' || Char.name == 'Aranthius' || Char.name == 'Gossan'
  if percentmind >= 62
    Script.run "turnbrooch", "red 2"
    Script.run "turnbrooch", "blue 1"
  end
end

if Char.name == 'Gossan'
  Script.start('isigns')
  Spell[211].cast()
  Spell[215].cast()
  Script.start('Gossan-surge')
  Script.start('shattered_empath')
elsif Char.name == 'Helsfeld'
  Script.start('isigils')
  Script.start('Helsfeld-surge')
elsif Char.name == 'Idios'
  Script.start('symbolz')
  # Script.start('tonis') # enough mana? =/
  Script.start('Idios-unstun')
elsif Char.name == 'Aranthius'
  Script.start('symbolz')
elsif Char.name == 'Azanoth'
  Script.start('symbolz')
end

# start attacking
echo "Starting attack sequence"
if Char.name == 'Aranthius'
  Script.start('rapid')  
elsif Char.name == 'Azanoth'
  fput "cman surge" if !Spell[9605].active? && !Spell[9606].active? && checkstamina >= 30
  fput "cman dervish"
  waitrt?
  fput "war shout"
  waitrt?
  Script.start('Azanoth-506')
end

original_other_bounty_counts = nil
while bounty_counts = read_lines_bounty_counts(bounty_pattern)
  if bounty_counts.nil?
    echo "ERROR: Bounty counts nil!!!"
    break
  end
  other_bounty_counts = bounty_counts.reject { |k, v| k === Char.name || k == 'Gossan' || k == 'Helsfeld' }
  if original_other_bounty_counts.nil?
    original_other_bounty_counts = other_bounty_counts
  end
  if Char.name == 'Gossan'
    break if bounty_counts[Char.name] >= other_bounty_counts.values.max - 1
  elsif Char.name == 'Helsfeld'
    break if bounty_counts[Char.name] >= other_bounty_counts.values.max && other_bounty_counts.all? { |k, v| v < original_other_bounty_counts[k] }
  else
    break if bounty_counts[Char.name] >= (other_bounty_counts.values.max || 0) - 3
  end
  echo "Waiting for other character to get more credit"
end

Script.start("#{Char.name}-bandits")

waitrt? # I can't remember wtf this is for
