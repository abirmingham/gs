module BanditAttack
  def self.main()
    # state
    poaching = false

    # main loop
    while true
      fput "stand" until standing?

      # identify targets
      targets = GameObj.npcs.select do |npc|
        $AZ_BANDIT_TARGET_SET[npc.noun] && npc.status != "dead" && !npc.name.start_with?("animated ")
      end

      # check to see if we've moved
      buffer = []
      leavers = {}
      while line = get?
        buffer.push(line)
      end
      
      for i in 1..buffer.length do
        line = buffer[buffer.length - i]

        if line =~ /(\w+) just went \w+\.$/
          # this person left the room - we aren't poaching them anymore
          # TODO: what about things like "blah just went through a wooden door."?
          # this person left the room - we aren't poaching them anymore
          leavers[$1] = true
        elsif line.start_with?('Obvious paths:') || line.start_with?('Obvious exits:')
          # previous line should be "Also here:" (unless we're leading)
          line = buffer[buffer.length - i - 1]
          if line && line.start_with?('Also here: ') && line =~ /^Also here: (.*)/
            # Check to see if we'd be poaching
            poaching = false
            others = $1.split(', ').each { |pc|
              pc_clean = pc.sub(/ who is .*/, '').split(' ')[-1] # remove status suffix and prename title
              poaching = true if !$AZ_CHARS_SET[pc_clean] && !leavers[pc_clean]
            }
          elsif line && !group?
            # I must be leading
          else
            echo "WTF"
            echo "#{buffer.length} - #{i} - 1"
            echo buffer
            echo '-----------'
            poaching = true
          end
          break
        end
      end

      if poaching || targets.nil? || targets.length == 0
        if checkcastrt == 0
          fput "stance def" if checkstance != "defensive"
        elsif checkstance != "guarded"
          fput "stance def"
        end
      elsif running? 'sloot'
        wait_while { running? 'sloot' }
      else
        attack(targets)
      end

      rt = checkrt
      if rt > 2
        sleep(rt - 1)
      else
        sleep 0.25
      end
    end
    # end main loop
  end

  def self.attack(targets)
    if targets.length >= 2 && checkmana >= 40
      put 'stance off'
      fput "incant 518 air"
    elsif targets.length >= 1 && checkmana >= 20
      put 'stance off'
      fput "incant 903"
    end
  end
end

BanditAttack.main()