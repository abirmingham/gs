target_set = {}
"rogue marauder thief mugger bandit brigand robber outlaw thug highwayman".split(" ").each do |noun|
  target_set[noun] = true
end

module KasparBandits
  @DOWNSTREAM_HOOK_NAME = "KasparBandits"
  @FRIENDS = ["Aranthius", "Azanoth"]
  @grouplist = []

  def self.populate_group()
    @grouplist.clear()
    @FRIENDS.each { |f| @grouplist.push(f) }
    complete = false

    checkgroupline = proc { |line|
      line =~ /exist="\-[0-9]+" noun=".*">(.*)<\/a> is (?:following you|the leader of your group|also a member of your group)/i
      @grouplist.push($1) if $1 && !@grouplist.include?($1)
    }

    action = proc { |server_string|
      if checkgroupline.call(server_string)
        nil
      elsif server_string =~ /group status is currently|to set your group status|^.$|You are not currently in a group/m
        complete = true
        nil
      else
        server_string
      end
    }
    DownstreamHook.add(@DOWNSTREAM_HOOK_NAME, action)
    $_SERVER_.puts "group"
    waitfor "group status is currently", "to set your group status", "You are not currently in a group"
    wait_until { complete }
    DownstreamHook.remove(@DOWNSTREAM_HOOK_NAME)
  end

  def self.main(target_set)
    populate_group()
    before_dying { DownstreamHook.remove(@DOWNSTREAM_HOOK_NAME) }
    echo @grouplist
    
    echo "Starting"
    fresh_room = true
    room_id = Room.current.id

    while true
      if checkbounty =~ /^You (have )?succeeded/
        sleep 2
      elsif room_id != Room.current.id
        # sleep 1
        room_id = Room.current.id
      end

      targets = GameObj.npcs.select do |npc|
        target_set[npc.noun] && npc.status != "dead" && !npc.name.start_with?("animated ")
      end
      need_attack = ((checkpcs - @grouplist).count == 0) && targets.length > 0

      if need_attack and !running? "sloot"
        # Spell[1030].cast()
        fput "stand" until standing?
        fput "stance off" until checkstance == "offensive"
        if Spell[9005].active? || targets.length < 2
          fput "kill"
        else
          fput "mstrike"
        end

        rt = checkrt
        sleep(rt - 1) if rt > 2

        fresh_room = false
      elsif targets.length == 0
        fput "stance def" until checkstance == "defensive"
      end

      #   if checkcastrt == 0
      #     fput "stance def" if checkstance != "defensive"
      #   else
      #     fput "stance def" if checkstance != "guarded"
      #   end
      sleep 0.25
    end
  end
end

KasparBandits.main(target_set)
