args = script.vars[1..-1]
GROUP =
  if args.length > 0
    [Char.name, *args.collect { |name| name.capitalize }].uniq
  else
    %w[Azanoth Idios Aranthius Gossan Helsfeld]
  end

echo GROUP

$AZ_REMOTE['actions'].clear_all_actions

throw 'No bounty' unless bounty?

if bounty? !~ /^You have been tasked/
  echo 'Waiting for bounty'
  wait_while do
    bounty? !~ /^You have been tasked/ || running?('fbandit') || running?('go2')
  end
  sleep 5
end

# Identify bounty location
bounty_re = /^You have been tasked to (?:help \w+ )?suppress bandit activity (?:in|on|near|between|under) (?:the )?(.*)\s(?:near|between|under|\.)/
bounty_location = nil
bounty_location = $1 if bounty? =~ bounty_re
throw 'Failed to find bounty location' unless bounty_location

# Wait for share-ready
GROUP.each do |char|
  if Char.name != char
    $AZ_SEND_ACTION_SYNC.call char,
                              'wait_groupbounty_cooldown_unless',
                              bounty_location
  end
end

GROUP.each do |char|
  $AZ_SEND_ACTION_SYNC.call char, 'stop-script', 'fbandit' if Char.name != char
end

# Form group
fput 'disband'
fput 'leave'
fput 'group open'

GROUP.each do |char|
  if Char.name != char
    $AZ_SEND_ACTION_SYNC.call char, 'ungroup'
    fput "hold #{char}"
  end
end

fput 'group close'

# Clear previous counts
$AZ_REMOTE['bandits'].clear_counts

# Share bounty
Script.run('go2', 'advguild')

GROUP.each do |char|
  if Char.name != char
    $AZ_SEND_ACTION_SYNC.call char, 'exchange-unless', bounty_location
    $AZ_SEND_ACTION_SYNC.call char, 'start-script', 'prep'
    fput "ask luc to add #{char}"
  end
end

# Go!
Script.start('prep')
sleep 3 # wait for warcry
waitrt?
Script.start('azbandit')
