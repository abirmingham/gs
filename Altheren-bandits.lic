target_set = {}
'rogue marauder thief mugger bandit brigand robber outlaw thug highwayman adept initiate seer scout janissary herald champion warlord tormentor triggerman warden captain'
  .split(' ')
  .each { |noun| target_set[noun] = true }

module Ewave
  @DOWNSTREAM_HOOK_NAME = 'ewave_downstream_hook'
  @FRIENDS = %w[Fizzlebwap Alendi]
  @grouplist = []

  def self.populate_group()
    @grouplist.clear
    @FRIENDS.each { |f| @grouplist.push(f) }
    complete = false

    checkgroupline =
      proc do |line|
        line =~
          %r{exist="\-[0-9]+" noun=".*">(.*)<\/a> is (?:following you|the leader of your group|also a member of your group)}i
        @grouplist.push($1) if $1 && !@grouplist.include?($1)
      end

    action =
      proc do |server_string|
        if checkgroupline.call(server_string)
          nil
        elsif server_string =~
              /group status is currently|to set your group status|^.$|You are not currently in a group/m
          complete = true
          nil
        else
          server_string
        end
      end
    DownstreamHook.add(@DOWNSTREAM_HOOK_NAME, action)
    $_SERVER_.puts 'group'
    waitfor 'group status is currently',
            'to set your group status',
            'You are not currently in a group'
    wait_until { complete }
    DownstreamHook.remove(@DOWNSTREAM_HOOK_NAME)
  end

  def self.main(target_set)
    populate_group
    before_dying { DownstreamHook.remove(@DOWNSTREAM_HOOK_NAME) }
    echo @grouplist

    echo 'Starting'
    last_room = Room.current.id
    fresh_room = true

    while true
      if last_room != Room.current.id
        populate_group
        fresh_room = true
        last_room = Room.current.id
      end

      sleep 1 if checkbounty =~ /^You (have )?succeeded/
      find_target =
        proc do
          GameObj.npcs.find do |npc|
            target_set[npc.noun] && npc.status !~ /dead|gone/ &&
              !npc.name.start_with?('animated ')
          end
        end
      needs_attack = ((checkpcs - @grouplist).count == 0) && find_target.call
      if needs_attack
        # ewave
        Spell[410].cast
        GameObj.pcs.each do |s|
          fput "pull #{s.noun}" if s.status =~ /lying|prone/
        end

        # 518
        if fresh_room
          waitcastrt?
          fput 'stance off' if checkstance != 'offensive'
          fput 'incant 518 air' if checkmana >= 18
          waitcastrt?
          fput 'stance def' if checkstance != 'defensive'
        end

        # 903
        sleep 2 if fresh_room or checkbounty =~ /^You (have )?succeeded/
        while target = find_target.call
          if (checkmana 4)
            waitrt?
            waitcastrt?
            fput 'stance offensive'
            fput 'incant 903'
            fput 'stance defensive'
          else
            echo 'Waiting for mana'
            sleep 2
          end
        end
        fresh_room = false
      end
      echo "checkpcs - @grouplist = #{checkpcs - @grouplist}"
      Script.run('sloot') if ((checkpcs - @grouplist).count == 0) && has_loot?
      echo "has_loot? = #{has_loot?}"
      sleep 0.25
    end
  end

  def self.has_loot?()
    return(
      GameObj.npcs.any? { |n| n.status == 'dead' } || GameObj.loot.any? do |n|
        n.type == 'skin' || n.type == 'gem' || n.name =~ /coins/
      end
    )
  end
end

Ewave.main(target_set)
