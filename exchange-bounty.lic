taskfinish = [420, 1957, 28_978]
taskfinish_match = /sentry|guard|sergeant/
bounty_regex = /^You have been tasked to (?:help \w+ )?suppress bandit activity (?:in|on|near|between|under) (?:the )?(.*?)\s(?:near|between|under|\.)/

valid_targets = {
  'wr' => "Widowmaker's Road",
  'bw' => 'Black Weald',
  'cw' => 'Cliffwalk',
  'mv' => 'Muddy Village'
}

targets = {}
start_room = Room.current.id

raise 'No input' unless script.vars[1..-1].length > 0

script.vars[1..-1].each do |v|
  raise "Invalid target: #{v}" unless valid_targets[v]
  targets[valid_targets[v]] = true
end

def acceptable_bounty?(targets, location)
  !!targets[location]
end

if bounty? =~ bounty_regex && acceptable_bounty?(targets, $1)
  raise 'Already done'
end

until bounty? =~ bounty_regex && acceptable_bounty?(targets, $1)
  echo bounty?
  echo bounty? =~ bounty_regex
  echo $0
  echo $1
  Script.run('go2', 'advguild')
  npc = GameObj.npcs.find { |npc| npc.name =~ /Guild Taskmaster/ }
  raise 'Failed to find npc' if npc.nil?
  fput "ask ##{npc.id} about rem"
  fput "ask ##{npc.id} about rem"
  if Spell[9003].active?
    fput "ask ##{npc.id} about exped"
  else
    fput "ask ##{npc.id} about bounty"
  end

  Script.run(
    'go2',
    Room.current.find_nearest(taskfinish).to_s
  )
  npc = GameObj.npcs.find { |npc| npc.name =~ taskfinish_match }
  fput "ask ##{npc.id} about bounty"
  wait_until { bounty? =~ bounty_regex }
end

Script.run('go2', start_room.to_s)
